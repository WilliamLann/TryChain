package com.eth.model;

import java.math.BigDecimal;
import java.math.MathContext;
import java.util.List;
import java.util.Map;

import com.eth.model.base.BaseEthTx;
import com.jfinal.plugin.activerecord.Page;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class EthTx extends BaseEthTx<EthTx> {
	public static final EthTx dao = new EthTx().dao();
	private BigDecimal minValue = null;
	private String time = null;
	private String periodTime = null;
	public BigDecimal getMinValue(){
		if(getValue()!=null){
			minValue = new BigDecimal(getValue()).divide(new BigDecimal("1000000000000000000"), new MathContext(8));
		}
		return minValue;
	}
	public String getTime(){
		if(getTimestamp()!=null){
			time = LynxUtil.formatDuring(Long.parseLong(getTimestamp()));
		}
		return time;
	}
	public String getPeriodTime(){
		if(getTimestamp()!=null){
			periodTime =  LynxUtil.format(Long.parseLong(getTimestamp()));
		}
		return periodTime;
	}
	@Override
	protected Map<String, Object> _getAttrs(){
		Map<String, Object> attrs = super._getAttrs();
		attrs.put("time", this.getTime());
		attrs.put("periodTime", this.getPeriodTime());
		attrs.put("minValue", this.getMinValue());
		return attrs;
	}
	public Page<EthTx> getTxsPage(int n, int size){
		return paginate(n, size, "select *", "from eth_tx order by blockNumber desc ");
	}
	
	public Page<EthTx> getLatestTxsPage(int n, int size) {
		return paginate(n, size, "select *", "from eth_tx where block_date = ?", LynxUtil.getToday());
	}
	public List<EthTx> getLatestTx() {
		return find("select * from eth_tx where block_date = ? limit 20", LynxUtil.getToday());
	}
	
	public int getTxNumByBlock(int blocknumber) {
		
		return blocknumber;
	}
}
